Без jQuery!
Минимум скриптов !(минимальные слайдеры)
Минимально необходимая вложенность тегов!!!!

все что выделено жирным, курсивом или цветом делать через css без тегов B, strong, i
B, strong в css привести к обычному тексту font-weight
Для дизайна использовать только div и span
Кнопки действия (купить, заказать ...) и кнопка поиска тегом button
Тег <a> только для ссылок, телефонов, email, мессенджеров тоесть там где есть атрибут href
бургер, личный кабинет, корзина, закрыть окно, соц.сети, месенджеры и т.д. псевдо классами before, after если нельзя, то тегом span
не использовать тег br и hr
W3C validator
Все что связано с навигацией (меню, хлебные крошки, пагинация) в тег nav 
На странице только 1 тег H1
Правильная иерархия тегов заголовков!!!
Не использовать заголовки вне основного контента (не использовать в меню, футере, всплывающих формах) заголовки используются только для заголовков в основном контенте
Не использовать сторонние шрифты!
Все элементы шаблона в svg!!! включая логотипы клиентов

Все контентные изображения (услуги, портфолио, эти сайты сделаны на битрикс, каталог, фото сотрудников, задний фон блоков)в jpg 
с максимальным качеством все эти изображения с атрибутом src и srcset
<img src="img.jpg" srcset="img.jpg 1x, img.jpg 2x, img.jpg 3x" alt="текст" width="100" height="100" decoding="async">
decoding, ширина и высота обязательный атрибут для img, адаптивность задается через css 

Сервисные изображения (поиск, корзина, иконки, галочки, соцюсети и все, что не контент нужно верстать через background)
Для форм использовать justvalidate и inputmask на чистом JS

хлебные атрибут крошки rel="up" обязательно через нумерованый список <OL>

Смещение элементов при загрузке страницы не допустипо !!! https://web.dev/optimize-cls/#modern-best-practice
Проверяем все в pagespeed  https://pagespeed.web.dev

Адаптиный css отдельным файлом adapy.css, в файле по одному медиа запросу на разрешение (то-есть один раз встречается 
@media (min-width: px) {...})

Верстать необходимо так, чтобы на странице можно было заменить порядок блоков и верстка останется корректной

Кастомные формы через css 
	https://jsfiddle.net/api/post/library/pure/
	https://codepen.io/Tolstoi/pen/oWdRey

Верстка из 3 файлов 
Header.php
Page.php
Footer.php
Тоесть хедер и футер у все страниц всегда одинаковый, все изменения в теле страниц

mobile-first
Максимально исользовать em и rem, шрифты, иконки, кнопки, line-height(вертикальный ритм)
Помнить о переполнении элемента контентом (большой размер изображения, избыточное количесто текста, 100 символов подряд без пробелов)
Отзывчивая верстка (комбинированный вариант адаптивной и резиновой верстки) http://joxi.ru/brRxwe4TBWDz02
Все, что можно сделать с помощью CSS-стилей, нужно делать через них, не прибегая к JavaScript
Минимально необходимая вложенность тегов в html 
минимальное количество кода в css без дублирования свойств, если их можно присвоить общему родителю, а не прописывать для каждого класса
Шрифты  должны наследоваться от body и максимальное количество свойст в нем, элементам  будем задавать цвет, размер и так-далее.
Использовать одинаковые единицы измерений в таблицах стилей
Стараться не допускать точных размеров ширины и высоты в пикселях, особенно внимально с элементами где контент может меняться
Не использовать float

Кнопки и подобные элементы с padding и min-width http://joxi.ru/a2XNwWpcQe3Pbr http://joxi.ru/V2V7w51tBQRjMA
	статья по кнопкам https://habr.com/ru/company/ruvds/blog/489820/
Элементы формы, особенно инпуты по разному отображаются в разных браузерах и операционных системах!!!!! обратить внимание на инпуты в среде macos там стили отдельно прописываются

Интуитивно понятные имена классов на английском языке https://github.com/yoksel/common-words
не использовать id и атрибуты для описания стилей, только для js, попапов, форм и прочего. Всегда 1 id на странице!
не использовать inline css и атрибут style
не использовать блочные элемента внутри строчного
Не делать отступы с помощью тега br, вообще его не исполльзовать
Все списки (товара, услуга, категорий, статей) или блоки с элементами grid, высота у блоков в одном ряду всегда одинаковая, 
в независимости от обьема контента

Активно использовать псевдо-элементы before, after ... особенно для списков, подчеркивания, bulets, графики на кнопках, 
соц.сети месенджеры, стрелочки и т.д. (кроме ссылок месанджеров и email в них можно через <a>)

Все анимация включая  hover через transition

Все отступы между секциями-блоками только через margin:bottom
Если нужно выставить секции отрицательный margin в верх или сместить секцию выше на верхнюю секцию, задаем отдельным классом


Сверстать 3 страницы () в макете подписаны
- главная
- лицензии битрикс
- Создание сайтов на битрикс

https://www.figma.com/file/pt04Y1gwqGOJvWJ1JI6Aj7/Sale-Media-new-(Community)